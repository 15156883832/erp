<%@ page contentType="text/html;charset=UTF-8"%>
<%@ include file="/WEB-INF/views/include/taglib.jsp"%>
<html>
<head>
    <meta charset="utf-8">
    <meta name="decorator" content="base"/>
    <title>全部工单</title>
    <script type="text/javascript" src="${ctxPlugin}/lib/orderFormat.js"></script>
    <script type="text/javascript" src="${ctxPlugin}/lib/Validform/5.3.2/Validform.min.js"></script>
    <link rel="stylesheet" type="text/css" href="${ctxPlugin}/lib/select/select2.min.css"/>
    <script type="text/javascript" src="${ctxPlugin}/lib/select/select2.full.min.js"></script>
    <script type="text/javascript" src="${ctxPlugin}/lib/select/zh-CN.js"></script>
</head>
<body >
<!-- 添加申请 -->
<div class="popupBox bjsdrkbox" style="width: 1130px;">
    <h2 class="popupHead">
        添加工程师备件领取登记
        <a href="javascript:;" class="sficon closePopup"></a>
    </h2>
    <div class="popupContainer pos-r">
        <div class="popupMain" style="padding-left: 19px;">
            <div class="pcontent" >
                <div>
                    <label class="f-l w-65 mb-10"><em class="mark">*</em>工  程  师：</label>
                    <select class="select f-l w-140" name="employeId" id="employeId" datatype="*" nullmsg ="请选择工程师">
                        <option value="">请选择</option>
                        <c:forEach items="${emps}" var="emp">
                            <option value="${emp.columns.id}">${emp.columns.name}</option>
                        </c:forEach>
                    </select>
                </div>
                <table class="table table-border table-bordered table-bg table-sdrk">
                    <thead>
                    <tr>
                        <th class="w-150">备件条码</th>
                        <th class="w-150">备件名称</th>
                        <th class="w-150">备件型号</th>
                        <th class="w-80">备件类型</th>
                        <th class="w-70">库存数量</th>
                        <th class="w-70">申请数量</th>
                        <th class="w-160">关联工单</th>
                        <th class="w-70">工单详情</th>
                        <th class="w-100">备注</th>
                        <th class="w-70">操作</th>
                    </tr>
                    </thead>
                    <tbody id="sdrk_tbd">
                    <c:forEach var="fitting" items="${fittings}" varStatus="sta">
                        <tr name="sdrk_tr">
                            <td class="text-c  code-${sta.index}">${fitting.columns.code}</td>
                            <td title="${fitting.columns.name}" class="text-c  name-${sta.index}">${fitting.columns.name}</td>
                            <td title="${fitting.columns.version}" class="text-c  version-${sta.index}" style="white-space: nowrap;overflow: hidden;text-overflow: ellipsis;">${fitting.columns.version}</td>
                            <input type="hidden" class="id-${sta.index}" name="id" value="${fitting.columns.id}">
                            <c:if test="${fitting.columns.type eq 0}">
                                <td class="text-c  type-${sta.index}">耗材</td>
                            </c:if>
                            <c:if test="${fitting.columns.type eq 1}">
                                <td class="text-c  type-${sta.index}">配件</td>
                            </c:if>
                            <c:if test="${fitting.columns.type ne 0 && fitting.columns.type ne 1}">
                                <td class="text-c  type-${sta.index}"></td>
                            </c:if>
                            <td class="text-c stockWarning  warning-${sta.index}">${fitting.columns.fWarning}</td>
                            <td class="text-c"><input type="text" class="input-text num-${sta.index}" name="num"/></td>
                            <td class="text-c">
                                <select class="select w-140 orderNumber orderNumber-${sta.index}" name="orderNumber">
                                    <option value="">请选择</option>
                                </select></td>
                            <td class="text-c"><a class="c-0383dc seeDetail">查看</a></td>
                            <td class="text-c">
                                <input type="text" maxlength="500" name="remarks" title="" onchange="thisValue(this)" class="input-text remarks-${sta.index}"/></td>
                            <td class="text-c"><a class="c-0383dc" onclick="deleteTR(this)"><i class="sficon sficon-rubbish"></i>删除</a></td>
                        </tr>
                    </c:forEach>
                    </tbody>
                </table>
            </div>
        </div>
        <div class="text-c btnWrap">
            <a href="javascript:doSdrk();" class="sfbtn sfbtn-opt3 w-70 mr-5">保存</a>
            <a href="javascript:close('.bjsdrkbox');" class="sfbtn sfbtn-opt w-70 mr-5">取消</a>
        </div>
    </div>
</div>

<div class="popupBox drtsBox">
    <h2 class="popupHead">
        提示
        <a href="javascript:closeDrtsBox();" class="sficon closePopup"></a>
    </h2>
    <div class="popupContainer">
        <div class="popupMain">
            <div class="w-520" id="errorMessage">
            </div>
        </div>
        <div class="text-c mt-20 mb-15">
            <a href="javascript:closeDrtsBox();" class="sfbtn sfbtn-opt3 w-70">关闭</a>
        </div>
    </div>
</div>

<script type="text/javascript">
    var orderHtml='<option value="">请选择</option>';
    var fittings = ${fittingSize};
    $(function(){
        $('#employeId').select2();
        $("#employeId").next(".select2").find(".selection").css("width","140px");

        $(".orderNumber").select2();
        $(".orderNumber").next(".select2").find(".selection").css("width","140px");

        initializeCodeAndName();
        $('.bjsdrkbox').popup();

        bindEvent();

    });

    function thisValue(val){
        return $(val).attr("title",$(val).val());
    }
    function bindEvent(){
        $(".seeDetail").each(function(){
            var $x=-90;
            var $y=25;

            $(this).mouseover(function(e){
                var orderNumber=$(this).parent("td").parent("tr").find(".orderNumber").val();
                if(!isBlank(orderNumber)){
                    $.ajax({
                        type: "POST",
                        url: "${ctx}/fitting/fittingApply/getOrderByNumber",
                        data: {
                            number:orderNumber,
                        },
                        dataType: "json",
                        success: function (data) {
                            var warranty="保内";
                            if (data.columns.warranty_type == "1") {
                                warranty="保内";
                            } else if (data.columns.warranty_type == "2") {
                                warranty="保外";
                            } else {
                                warranty="";
                            }

                            var html='<div class="detailClass" style="width: 200px;height:150px;" >';
                            html+='<div class="" style="height: 150px;border: 1px solid #0b88bc;background-color: #fff;">';
                            html+='<div class="pd-10" style="height: 148px;"> <table style="table-layout: fixed;">';
                            html+=' <tr class="cl mb-10">';
                            html+=' <th class="lh-26 w-70">用户姓名:</th>';
                            html+='<td class="lh-26 customerName w-110" style="white-space: nowrap;overflow: hidden;text-overflow: ellipsis;">'+data.columns.customer_name+'</td></tr><tr>';
                            html+='    <th class="lh-26 w-70">联系方式:</th>';
                            html+=' <td class="lh-26 customerMobile w-110">'+data.columns.customer_mobile+'</td></tr><tr>';
                            html+='      <th class="lh-26 w-70">家电品类:</th>';
                            html+='  <td class="lh-26 applianceCategory w-110" style="white-space: nowrap;overflow: hidden;text-overflow: ellipsis;">'+data.columns.appliance_category+'</td></tr><tr>';
                            html+='<th class="lh-26 w-70">家电型号:</th>';
                            html+='<td class="lh-26 applianceModel w-110" style="white-space: nowrap;overflow: hidden;text-overflow: ellipsis;">'+data.columns.appliance_model+'</td></tr><tr>';
                            html+='   <th class="lh-26 w-70">保修类型:</th>';
                            html+='<td class="lh-26 warrentyType w-110" style="white-space: nowrap;overflow: hidden;text-overflow: ellipsis;">'+warranty+'</td> </tr> </table> </div> </div> </div>';

                            layer.open({
                                type: 1
                                ,title: false //不显示标题栏
                                ,closeBtn: false
                                ,area: '200px;'
                                ,shade: 0
                                ,id: 'LAY_layuipro' //设定一个id，防止重复弹出
                                ,resize: false
                                ,btnAlign: 'c'
                                ,moveType: 1 //拖拽模式，0或者1
                                ,offset: [ //为了演示，随机坐标
                                    (e.pageY + $y)+"px",
                                    (e.pageX + $x)+"px"
                                ]
                                ,content: html
                                ,success: function(layero){
                                    /*var btn = layero.find('.layui-layer-btn');
                                    btn.find('.layui-layer-btn0').attr({
                                        href: 'http://www.layui.com/'
                                        ,target: '_blank'
                                    });*/
                                }
                            });
                        }
                    });
                }
            }).mouseout(function(){
                layer.closeAll();
            }).mousemove(function(e){
                $(".detailClass").css({
                    top: (e.pageY + $y)+"px",
                    left: (e.pageX + $x)+"px"
                })
            });
        });
    }

    var lon=0;//计算行数
    function initializeCodeAndName(){
        var html = '';
        lon=parseInt(fittings);
        html += '<tr name="sdrk_tr">';
        html += '	<td class="text-c">';
        html += '	<select class="select w-130 code code-' + lon + '"  name="fittingCode"  >    ';
        html += '  <option value=""></option>';
        html += '    </select>';
        html += '	</td>';

        html += '	<td class="text-c">';
        html += '  <select class="select w-130 name name-' + lon + '"  name="fittingName" id="fittingName" >    ';
        html += '  <option value=""></option>';
        html += '  </select>';
        html += '   </td>';

        html += '	<td class="text-c version-'+lon+'" style="white-space: nowrap;overflow: hidden;text-overflow: ellipsis;"></td>';

        html += '	<input type="hidden" class="id-' + lon + '" name="id" >';
        html += '	<td class="text-c  type-' + lon + '"></td>';
        html += '	<td class="text-c stockWarning  warning-' + lon + '"></td>';
        html += '	<td class="text-c"><input type="text" class="input-text num-' + lon + '" name="num"/></td>';
        html += '	<td class="text-c">';
        html += '  <select class="select w-140 orderNumber orderNumber-'+lon+'" name="orderNumber">';
        html += '   <option value="">请选择</option>';
        html += '  </select></td>';
        html += '	<td class="text-c"><a class="c-0383dc seeDetail">查看</a></td>';
        html += '	<td class="text-c"><input type="text" maxlength="500" title="" onchange="thisValue(this)"  name="remarks" class="input-text remarks-' + lon + '"/></td>';
        html += '	<td class="text-c"></td>';
        html += '</tr>';

        $("#sdrk_tbd").append(html);
        $.getScript("${ctxPlugin}/lib/select/zh-CN.js", function () {
            $("#sdrk_tbd").find(".code-" + lon).select2({
                ajax: {
                    type: 'post',
                    url: '${ctx}/fitting/stock/getFittingsBySelect',
                    dataType: 'json',
                    delay: 250,
                    data: function (params) {
                        return {
                            q: params.term, // search term 请求参数
                            page: params.page
                        };
                    },
                    processResults: function (data, params) {
                        params.page = params.page || 1;
                        var itemList = [];//当数据对象不是{id:0,text:'ANTS'}这种形式的时候，可以使用类似此方法创建新的数组对象
                        for (var i = 0; i < data.list.length; i++) {
                            var code = data.list[i].columns.code;
                            itemList.push({id: code, text: code});
                        }
                        return {
                            results: itemList,//itemList
                            pagination: {
                                more: (params.page * 10) < data.total_count
                            }
                        };
                    },
                    cache: true
                },
                placeholder: '请输入搜索',//默认文字提示
                language: "zh-CN",
                // tags: true,//允许手动添加
                allowClear: true,//允许清空
                escapeMarkup: function (markup) {
                    return markup;
                }, // 自定义格式化防止xss注入
                minimumInputLength: 3,//最少输入多少个字符后开始查询
                formatResult: function formatRepo(repo) {
                    return repo.text;
                }, // 函数用来渲染结果
                formatSelection: function formatRepoSelection(repo) {
                    return repo.text;
                } // 函数用于呈现当前的选择
            });
            $(".code-" + lon).next(".select2").find(".selection").css("width", "130");

            $("#sdrk_tbd").find(".name-" + lon).select2({
                ajax: {
                    type: 'post',
                    url: '${ctx}/fitting/stock/getFittingsNameBySelect',
                    dataType: 'json',
                    delay: 250,
                    data: function (params) {
                        return {
                            q: params.term, // search term 请求参数
                            page: params.page
                        };
                    },
                    processResults: function (data, params) {
                        params.page = params.page || 1;
                        var itemList = [];//当数据对象不是{id:0,text:'ANTS'}这种形式的时候，可以使用类似此方法创建新的数组对象
                        for (var i = 0; i < data.list.length; i++) {
                            var code = data.list[i].columns.code;
                            var name = data.list[i].columns.name;
                            var warning = data.list[i].columns.warning;
                            var str=name+"【剩余库存："+warning+"】";
                            itemList.push({id: code, text: str});
                        }
                        return {
                            results: itemList,//itemList
                            pagination: {
                                more: (params.page * 10) < data.total_count
                            }
                        };
                    },
                    cache: true
                },
                placeholder: '请输入搜索',//默认文字提示
                language: "zh-CN",
                // tags: true,//允许手动添加
                allowClear: true,//允许清空
                escapeMarkup: function (markup) {
                    return markup;
                }, // 自定义格式化防止xss注入
                minimumInputLength: 1,//最少输入多少个字符后开始查询
                formatResult: function formatRepo(repo) {
                    return repo.text;
                }, // 函数用来渲染结果
                formatSelection: function formatRepoSelection(repo) {
                    return repo.text;
                } // 函数用于呈现当前的选择
            });
            $(".name-" + lon).next(".select2").find(".selection").css("width", "130");

            $(".orderNumber-"+lon).select2();
            $(".orderNumber-"+lon).next(".select2").find(".selection").css("width","140px");
            lon=lon+1;
        });

    }

    function deleteTR(z){
        $(z).parent('td').parent('tr').remove();
    }

    function addNewTR(length){
        var html = '';
        html += '<tr name="sdrk_tr">';
        html += '	<td class="text-c">';
        html += '	<select class="select w-130 code code-' + length + '"  name="fittingCode" datatype="*" nullmsg ="请选择工程师" >';
        html += '  <option value=""></option>';
        html += '    </select>';
        html += '	</td>';

        html += '	<td class="text-c">';
        html += '  <select class="select w-130 name name-' +length + '"  name="fittingName" id="fittingName" >';
        html += '  <option value=""></option>';
        html += '  </select>';
        html += '   </td>';

        html += '	<td class="text-c version-'+length+'" style="white-space: nowrap;overflow: hidden;text-overflow: ellipsis;"></td>';

        html += '	<input type="hidden" class="id-' + length + ' " name="id" >';
        html += '	<td class="text-c type-' + length + '"></td>';
        html += '	<td class="text-c stockWarning warning-' + length + '"></td>';
        html += '	<td class="text-c"><input type="text" class="input-text num-' + length + '" name="num"/></td>';
        html += '	<td class="text-c">';
        html += '  <select class="select w-140 orderNumber orderNumber-'+lon+'" name="orderNumber">';
        html += orderHtml;
        html += '  </select></td>';
        html += '	<td class="text-c"><a class="c-0383dc seeDetail">查看</a></td>';
        html += '	<td class="text-c"><input type="text" maxlength="500" title="" onchange="thisValue(this)"  name="remarks" class="input-text remarks-' + length + '"/></td>';
        html += '	<td class="text-c"></td>';
        html += '</tr>';

        $("#sdrk_tbd").append(html);
        $.getScript("${ctxPlugin}/lib/select/zh-CN.js",function(){
            $("#sdrk_tbd").find(".code-"+length).select2({
                ajax: {
                    type:'post',
                    url: '${ctx}/fitting/stock/getFittingsBySelect',
                    dataType: 'json',
                    delay: 250,
                    data: function (params) {
                        return {
                            q: params.term, // search term 请求参数
                            page: params.page
                        };
                    },
                    processResults: function (data, params) {
                        params.page = params.page || 1;
                        var itemList = [];//当数据对象不是{id:0,text:'ANTS'}这种形式的时候，可以使用类似此方法创建新的数组对象
                        for (var i=0;i<data.list.length;i++) {
                            var code=data.list[i].columns.code;
                            itemList.push({id: code, text: code});
                        }
                        return {
                            results: itemList,//itemList
                            pagination: {
                                more: (params.page * 10) < data.total_count
                            }
                        };
                    },
                    cache: true
                },
                placeholder:'请输入搜索',//默认文字提示
                language: "zh-CN",
                // tags: true,//允许手动添加
                allowClear: true,//允许清空
                escapeMarkup: function (markup) { return markup; }, // 自定义格式化防止xss注入
                minimumInputLength: 3,//最少输入多少个字符后开始查询
                formatResult: function formatRepo(repo){return repo.text;}, // 函数用来渲染结果
                formatSelection: function formatRepoSelection(repo){return repo.text;} // 函数用于呈现当前的选择
            });
            $(".code-"+length).next(".select2").find(".selection").css("width","130");

            $("#sdrk_tbd").find(".name-"+length).select2({
                ajax: {
                    type:'post',
                    url: '${ctx}/fitting/stock/getFittingsNameBySelect',
                    dataType: 'json',
                    delay: 250,
                    data: function (params) {
                        return {
                            q: params.term, // search term 请求参数
                            page: params.page
                        };
                    },
                    processResults: function (data, params) {
                        params.page = params.page || 1;
                        var itemList = [];//当数据对象不是{id:0,text:'ANTS'}这种形式的时候，可以使用类似此方法创建新的数组对象
                        for (var i=0;i<data.list.length;i++) {
                            var code=data.list[i].columns.code;
                            var name=data.list[i].columns.name;
                            var warning = data.list[i].columns.warning;
                            var str=name+"【剩余库存："+warning+"】";
                            itemList.push({id: code, text: str});
                        }
                        return {
                            results: itemList,//itemList
                            pagination: {
                                more: (params.page * 10) < data.total_count
                            }
                        };
                    },
                    cache: true
                },
                placeholder:'请输入搜索',//默认文字提示
                language: "zh-CN",
                // tags: true,//允许手动添加
                allowClear: true,//允许清空
                escapeMarkup: function (markup) { return markup; }, // 自定义格式化防止xss注入
                minimumInputLength: 1,//最少输入多少个字符后开始查询
                formatResult: function formatRepo(repo){return repo.text;}, // 函数用来渲染结果
                formatSelection: function formatRepoSelection(repo){return repo.text;} // 函数用于呈现当前的选择
            });
            $(".name-"+length).next(".select2").find(".selection").css("width","130");

            $(".orderNumber-"+length).select2();
            $(".orderNumber-"+length).next(".select2").find(".selection").css("width","140px");

            $(".seeDetail").unbind("mouseover");
            $(".seeDetail").unbind("mouseout");

            bindEvent();

        });
    }


    var fla=false;
    $(function(){
        $("#sdrk_tbd").change(function(e){
            if(fla){
                return;
            }
            var codeOrnameOrversion = $(e.target).attr('class');//选中的值的class
            var valu=$(e.target).val();//选中的值（code）
            if(codeOrnameOrversion.indexOf("code")>0){
                fla=true;
                var va=new Array();
                va=codeOrnameOrversion.split(" ");
                var val=new Array();
                val=va[3].split("-");

                var fitName="name-"+val[1];//获取配件名称的class
                var price="price-"+val[1];//获取配件最新入库价格的class
                var warn="warning-"+val[1];//获取配件库存的class
                var id="id-"+val[1];//获取配件id的class
                var type="type-"+val[1];//获取备件型号class

                $.ajax({type:"post",data:{"code":valu},url: '${ctx}/fitting/stock/getFittingsByCode',dataType:"json",
                    success: function (result) {
                        if (result.columns.warning <= 0) {
                            $('.code-' + val[1]).val(null).trigger("change");
                            layer.msg("该备件已无库存,请重新选择!");
                            return;
                        }
                        var zl=parseInt(val[1])+1;
                        if(zl==lon){
                            $(e.target).parent().parent("tr").find("td:last").append('<a class="c-0383dc" onclick="deleteTR(this)"><i class="sficon sficon-rubbish"></i>删除</a>');
                            addNewTR(lon);
                            lon+=1;
                        }


                        $("."+va[3]).parent("td").replaceWith('<td class="text-c text-overflow " title="'+valu+'">'+valu+'</td>');
                        $("."+fitName).parent("td").replaceWith('<td class="text-c  text-overflow"  title="'+result.columns.name+'">'+result.columns.name+'</td>');
                        $(".version-"+val[1]).text(result.columns.version);
                        $(".version-" + val[1]).attr("title", result.columns.version);

                        //最新入库价格
                        $("."+price).val(result.columns.site_price);
                        $("."+warn).text(result.columns.warning);
                        $("."+id).val(result.columns.id);
                        if(result.columns.type=="0"){
                            $("."+type).text("耗材");
                        }else if(result.columns.type=="1"){
                            $("."+type).text("配件");
                        }else{
                            $("."+type).text("");
                        }
                    }
                })
                fla=false;
            }else if(codeOrnameOrversion.indexOf("name")>0){
                fla=true;
                var va=new Array();
                va=codeOrnameOrversion.split(" ");
                var val=new Array();
                val=va[3].split("-");
                var fitName="code-"+val[1];//获取配件条码的class
                var fitversion="version-"+val[1];//获取配件型号的class
                var price="price-"+val[1];//获取配件最新入库价格的class
                var warn="warning-"+val[1];//获取配件库存的class
                var id="id-"+val[1];//获取配件id的class
                var brand="type-"+val[1];//获取备件型号class

                $.ajax({type:"post",data:{"code":valu},url: '${ctx}/fitting/stock/getFittingsByCode',dataType:"json",
                    success: function (result) {
                        if (result.columns.warning <= 0) {
                            $('.name-' + val[1]).val(null).trigger("change");
                            layer.msg("该备件已无库存,请重新选择!");
                            return;
                        }
                        var zl=parseInt(val[1])+1;
                        if(zl==lon){
                            $(e.target).parent().parent("tr").find("td:last").append('<a class="c-0383dc" onclick="deleteTR(this)"><i class="sficon sficon-rubbish"></i>删除</a>');
                            addNewTR(lon);
                            lon+=1;
                        }

                        $("."+va[3]).parent("td").replaceWith('<td class="text-c text-overflow  " title="'+valu+'">'+result.columns.name+'</td>');
                        $("."+fitName).parent("td").replaceWith('<td class="text-c text-overflow" title="'+result.columns.name+'">'+result.columns.code+'</td>');
                        $(".version-"+val[1]).text(result.columns.version);
                        $(".version-" + val[1]).attr("title", result.columns.version);

                        //最新入库价格
                        $("."+price).val(result.columns.site_price);
                        $("."+warn).text(result.columns.warning);
                        $("."+id).val(result.columns.id);
                        if(result.columns.type=="0"){
                            $("."+type).text("耗材");
                        }else if(result.columns.type=="1"){
                            $("."+type).text("配件");
                        }else{
                            $("."+type).text("");
                        }
                    }
                })
                fla=false;
            }
        })
    })


    $("#employeId").on("change",function(){
        $("input[name='customerName']").val("");
        $("#customerM").val("");
        $("input[name='applianceCategory']").val("");
        $("input[name='applianceModel']").val("");
        $("input[name='warrentyType']").val("");
        $("input[name='orderId']").val("");
        var  html='<option value="">请选择</option>';
        $("#orderNumber").empty().append(html);

        var employId=$(this).select2("val");
        var employName=$(this).find("option:selected").text();
        $("#employeName").val(employName);
        if (!isBlank(employId)) {
            $.ajax({
                type: "POST",
                url: "${ctx}/fitting/fittingApply/getOrderByEmp",
                data: {
                    employId:employId,
                    employName:employName
                },
                dataType: "json",
                success: function (data) {
                    var obj = eval('data');
                    if(obj!=null){
                        orderHtml="";
                        orderHtml+='<option value="">请选择</option>';
                        for(var i=0;i<obj.length;i++){
                            orderHtml+=' <option title="'+obj[i].columns.number+'" value="'+obj[i].columns.number+'">'+obj[i].columns.number+'</option>';
                        }
                        $(".orderNumber").empty().append(orderHtml);
                    }
                }
            });
        } else {
            layer.msg("请选择工程师");

        }
    })

    var manuallyStockPosted=false;
    function doSdrk() {
        if (manuallyStockPosted) {
            // 防多次点击
            return;
        }

        var employeId = $("#employeId").val();
        var employeName = $("#employeId").next("span").find("#select2-employeId-container").attr("title");
        if (isBlank(employeId)) {
            layer.msg("请选择服务工程师");
            return;
        }

        var str = "";
        var check = true;
        var si=$("tr[name='sdrk_tr']").length;
        if(si==1) {
            layer.msg("请选择您要添加的备件！");
            return;
        }
        $("tr[name='sdrk_tr']").each(function (index) {
            var numReg =  /^(-?\d+)(\.\d+)?$/;
            var id = $(this).find("input[name='id']").val();//备件id
            var num = $(this).find("input[name='num']").val();//申请数量
            var warning = $(this).find(".stockWarning").text();//库存数量
            var orderNumber = $(this).find(".orderNumber").val();//工单编号
            var remarks = $(this).find("input[name='remarks']").val();//备注

            if(((index+1)!=si) && num==''){
                layer.msg("请输入第"+(index+1)+"行的申请数量");
                $(this).find("input[name='num']").focus();
                check = false;
                return;
            }
            if(((index+1)!=si) && !numReg.test(num)){
                layer.msg("您输入的第"+(index+1)+"行的申请数量格式不正确，请重新输入!");
                $(this).find("input[name='num']").focus();
                check = false;
                return;
            }
            if (((index+1)!=si) && num * 1 <= 0) {
                layer.msg("请输入第"+(index+1)+"行的正确的申请数量!");
                $(this).find("input[name='num']").focus();
                check = false;
                return;
            }
            if (parseInt(num) > parseInt(warning)) {
                layer.msg("第"+(index+1)+"行的备件库存数量不足，请重新输入!");
                $(this).find("input[name='num']").focus();
                check = false;
                return;
            }
            if((index+1)==si){
                return true;
            }
            str = str + id + "," + num + "," + orderNumber + "," + remarks + "-";
        });

        if (!check) {
        } else {
            manuallyStockPosted = true;
            $.post("${ctx}/fitting/fittingApply/saveFittingApplyBatch", {"data": str,"employeId":employeId,"employeName":employeName}, function (data) {
                if (data.noInventory) {
                    window.top.layer.msg("添加失败,含有库存不足的备件！");
                    manuallyStockPosted = false;
                    window.parent.reloadPage();
                    $.closeDiv($(".bjsdrkbox"));
                }else if(data.noEnough){
                    manuallyStockPosted = false;
                    $("#errorMessage").html(data.msg);
                    $(".drtsBox").popup({level:2});
                }else if(data.dataError){
                    window.top.layer.msg("添加失败,必要信息缺失,请联系管理员！");
                    manuallyStockPosted = false;
                    window.parent.reloadPage();
                    $.closeDiv($(".bjsdrkbox"));
                } else {
                    window.top.layer.msg("添加成功");
                    manuallyStockPosted = false;
                    window.parent.reloadPage();
                    $.closeDiv($(".bjsdrkbox"));
                }
            });
        }
    }

    function closeDrtsBox(){
        window.parent.reloadPage();
        $.closeAllDiv();
    }

    function close(selector){
        $.closeDiv($(selector));
    }

    function isBlank(val) {
        if(val==null || val=='' || val == undefined) {
            return true;
        }
        return false;
    }

</script>

</body>
</html>