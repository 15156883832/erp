package com.jojowonet.modules.fitting.web;

import com.google.common.collect.Maps;
import com.jfinal.plugin.activerecord.Db;
import com.jfinal.plugin.activerecord.Record;
import com.jojowonet.modules.fitting.service.EmpFittingKeepService;
import com.jojowonet.modules.fitting.service.EmployeFittingService;
import com.jojowonet.modules.fitting.service.FittingUsedRecordService;
import com.jojowonet.modules.operate.service.EmployeService;
import com.jojowonet.modules.order.service.OrderFittingService;
import com.jojowonet.modules.order.utils.CrmUtils;

import ivan.common.utils.UserUtils;
import ivan.common.web.BaseController;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import java.math.BigDecimal;
import java.util.List;
import java.util.Map;

/**
 * 工程师备件库存Controller
 *
 * @author Ivan
 * @version 2017-05-23
 */
@Controller
@RequestMapping(value = "${adminPath}/fitting/employeFitting")
public class EmployeFittingController extends BaseController {

    @Autowired
    private EmployeFittingService employeFittingService;

    @Autowired
    public EmpFittingKeepService empFittingKeepService;

    @Autowired
    public EmployeService empService;

    @Autowired
    public FittingUsedRecordService furService;
    @Autowired
	private OrderFittingService orderFittingService;


    @ResponseBody
    @RequestMapping(value = "showFittingType")//根据条码和名称显示型号
    public Map<String, Object> showFittingType(HttpServletRequest request, HttpServletResponse response, Model model) {
        String fitIdBindEmpId = request.getParameter("fitIdBindEmpId");
        String[] fittingId = fitIdBindEmpId.split(",");
        Map<String, Object> map = Maps.newHashMap();
        Record re = employeFittingService.showFittingType(fittingId);//显示型号
        if (re != null) {
            BigDecimal maxnum = re.getBigDecimal("warning");
            String version = re.getStr("version");
            String name = re.getStr("name");
            map.put("maxnum", maxnum);
            map.put("version", version);
            map.put("name", name);
            map.put("fittingId", fittingId[0]);
            map.put("code", re.getStr("code"));
            map.put("customerPrice", re.getBigDecimal("customer_price"));
            map.put("jg", "data");

        } else {
            map.put("jg", "nodata");
        }
        return map;
    }

    @ResponseBody
    @RequestMapping(value = "getEmployeFittings")
    public List<Record> getEmployeFittings(HttpServletRequest request, HttpServletResponse response) {
        String orderId = request.getParameter("orderId");
        return employeFittingService.getEmployeFittings(orderId);
    }

    @RequestMapping(value = "BjEmpFit")
    @ResponseBody
    public void BjEmpFit(HttpServletRequest request, HttpServletResponse response, Model model) {
        employeFittingService.empUseFit(request);
        String siteId = CrmUtils.getCurrentSiteId(UserUtils.getUser());
        String orderNumber = request.getParameter("orderNumber");
        BigDecimal cost = orderFittingService.sumFittingUseCostByOrder(siteId,orderNumber);
		Record rd = Db.findFirst("select a.* from crm_order a where a.number=? and a.site_id=?",orderNumber,siteId);
		if(rd!=null){
			Db.update("update crm_order a set a.auxiliary_cost=? where a.number=? and a.site_id=?",cost,orderNumber,siteId);
		}
    }

}
